// <copyright file="GlobalSuppressions.cs" company="GenericEventHandler">
//     Copyright (c) GenericEventHandler all rights reserved. Licensed under the Mit license.
// </copyright>
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Potential Code Quality Issues", "RECS0021:Warns about calls to virtual member functions occuring in the constructor", Justification = "not my code", Scope = "member", Target = "~M:Westwind.Utilities.Dynamic.Expando.#ctor")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Potential Code Quality Issues", "RECS0021:Warns about calls to virtual member functions occuring in the constructor", Justification = "not my code", Scope = "member", Target = "~M:Westwind.Utilities.Dynamic.Expando.#ctor(System.Object)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2214:Do not call overridable methods in constructors", Justification = "not my code", Scope = "member", Target = "~M:Westwind.Utilities.Dynamic.Expando.#ctor")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CC0067:Virtual Method Called On Constructor", Justification = "not my code", Scope = "member", Target = "~M:Westwind.Utilities.Dynamic.Expando.#ctor")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CC0067:Virtual Method Called On Constructor", Justification = "not my code", Scope = "member", Target = "~M:Westwind.Utilities.Dynamic.Expando.#ctor(System.Object)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "HeapAnalyzerLambdaInGenericMethodRule:Lambda or anonymous method in a generic method allocates a delegate instance", Justification = "<Pending>", Scope = "member", Target = "~M:ScrapProject.ExtensionMethods.Execute``2(System.Func{``0,``1},``0)~System.Threading.Tasks.Task{``1}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "HeapAnalyzerClosureSourceRule:Closure Allocation Source", Justification = "<Pending>", Scope = "member", Target = "~M:ScrapProject.ExtensionMethods.Execute``2(System.Func{``0,``1},``0)~System.Threading.Tasks.Task{``1}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "HeapAnalyzerClosureCaptureRule:Display class allocation to capture closure", Justification = "<Pending>", Scope = "member", Target = "~M:ScrapProject.ExtensionMethods.Execute``2(System.Func{``0,``1},``0)~System.Threading.Tasks.Task{``1}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "HeapAnalyzerClosureSourceRule:Closure Allocation Source", Justification = "<Pending>", Scope = "member", Target = "~M:ScrapProject.ExtensionMethods.ExecuteAsync``2(System.Func{``0,``1},``0)~System.Threading.Tasks.Task{``1}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "HeapAnalyzerLambdaInGenericMethodRule:Lambda or anonymous method in a generic method allocates a delegate instance", Justification = "<Pending>", Scope = "member", Target = "~M:ScrapProject.ExtensionMethods.ExecuteAsync``2(System.Func{``0,``1},``0)~System.Threading.Tasks.Task{``1}")]